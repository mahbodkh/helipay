plugins {
    id("java")
    id("org.springframework.boot") version "3.2.5"
    id("io.spring.dependency-management") version "1.1.4"
}

springBoot {
    mainClass = "app.helipay.core.Application"
}


subprojects {

}

repositories {
    // mavenLocal()
    mavenCentral()
}

if (project.hasProperty("prod")) {
//    apply from: "gradle/profile_prod.gradle"
} else {
//    apply from: "gradle/profile_dev.gradle"
}

configurations {
    providedRuntime
    implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hppc'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
//    testImplementation("com.tngtech.archunit:archunit-junit5-api:${archunitJunit5Version}") {
//        exclude group: "org.slf4j", module: "slf4j-api"
//    }
//    testRuntimeOnly("com.tngtech.archunit:archunit-junit5-engine:${archunitJunit5Version}") {
//        exclude group: "org.slf4j", module: "slf4j-api"
//    }
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'org.apache.commons:commons-lang3'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // db
    runtimeOnly 'org.postgresql:postgresql'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6'
    implementation 'org.hibernate.orm:hibernate-core'
    implementation 'org.hibernate.validator:hibernate-validator'
    annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


    //
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
}


task cleanResources(type: Delete) {
    delete "build/resources"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
