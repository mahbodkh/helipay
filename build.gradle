plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}



//springBoot {
//    mainClass = 'app.helipay.ce.Application'
//}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    springBoot {
        mainClass = 'app.helipay.ce.Application'
    }

    repositories {
        mavenCentral()
//        mavenLocal()
    }

    configurations {
        compileOnly.extendsFrom annotationProcessor
        testCompileOnly.extendsFrom annotationProcessor
        testAnnotationProcessor.extendsFrom annotationProcessor
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // database stuff
        runtimeOnly 'org.postgresql:postgresql'
        implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
            exclude group: "spring-boot-starter-data-jpa", module: "spring-boot-starter-data-jpa"
        }
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hppc'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

        implementation 'jakarta.annotation:jakarta.annotation-api'
        implementation 'org.apache.commons:commons-lang3'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

//        developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        //
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        //
        testImplementation 'org.testcontainers:postgresql'
        testImplementation 'org.springframework.boot:spring-boot-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter'
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true'
        ]
    }

}
repositories {
    // mavenLocal()
    mavenCentral()
}

if (project.hasProperty("prod")) {
//    apply from: "gradle/profile_prod.gradle"
} else {
//    apply from: "gradle/profile_dev.gradle"
}

configurations {
    providedRuntime
    implementation.exclude module: "spring-boot-starter-tomcat"
}



dependencies {
//    testImplementation("com.tngtech.archunit:archunit-junit5-api:${archunitJunit5Version}") {
//        exclude group: "org.slf4j", module: "slf4j-api"
//    }
//    testRuntimeOnly("com.tngtech.archunit:archunit-junit5-engine:${archunitJunit5Version}") {
//        exclude group: "org.slf4j", module: "slf4j-api"
//    }
}
